{"version":3,"sources":["app/RecievedProposals.js","app/services/utility.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["i","RecievedProposals","push","useHistory","useState","engageProposals","setEngageProposals","hasMarriageProposal","setHasMarriageProposal","name","proposalId","image","note","status","marriageProposal","setMarriageProposal","useEffect","fetchEngageProposals","loadAccount","myAddress","getAllEngagementProposals","forEach","proposal","index","object","proposer","getUser","user","getImageFromTokenId","proposerRingTokenId","engageProposal","id","proposerNote","arr","fetchMarriageProposal","getMarriageProposalByUser","vows","proposerVows","className","map","onClick","src","alt","length","substring","type","getURI","tokenId","tokenURI","uri","slice","uriToImageConverter","axios","result","data","getMetadataFromTokenId","getLoveLetterImageFromTokenId","tokenURILoveLetter","cid","getMarriageCertURI","marriageCertificateTokenURI","getImageFromMarriageCertTokenId","getTreeImageFromTokenId","tokenURITree","getImageFromCID","dataURItoBlob","dataURI","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","getGeneralContractURI","tokenUri","getMetadataFromGeneralContractTokenUri","tokenUriCID","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/22.8cffc99d.chunk.js","sourcesContent":["import React , { useState, useEffect} from 'react'\nimport  '../assets/Market.css'\nimport  '../assets/Card.css'\nimport { useHistory } from 'react-router-dom'\nimport { loadAccount, getUser, getAllEngagementProposals, getMarriageProposalByUser } from \"./services/web3\";\nimport { getImageFromTokenId } from \"./services/utility\";\n\nfunction RecievedProposals() {\n\n    const { push } = useHistory()\n\n    const [engageProposals, setEngageProposals] = useState([]);\n    const [hasMarriageProposal, setHasMarriageProposal] = useState(false);\n    const [marriageProposal, setMarriageProposal] = useState({\n        name: \"\",\n        proposalId: \"\",\n        image: \"\",\n        note: \"\",\n        status: \"\",\n    });\n\n    useEffect(() => {\n        const fetchEngageProposals = async () => {\n            const myAddress = await loadAccount();\n            const engagementProposals = await getAllEngagementProposals();\n            engagementProposals.forEach(async function(proposal, index, object) {\n                if (proposal.proposer === myAddress) {\n                    return;\n                }\n                const user = await getUser(proposal.proposer);\n                const image = await getImageFromTokenId(proposal.proposerRingTokenId);\n    \n                const engageProposal = {\n                    name: user.name,\n                    proposalId: proposal.id,\n                    image: image,\n                    note: proposal.proposerNote,\n                    status: proposal.status,\n                }\n                setEngageProposals((arr) => [...arr, engageProposal]);\n              });\n        };\n\n        const fetchMarriageProposal = async () => {\n            const myAddress = await loadAccount();\n            const proposal = await getMarriageProposalByUser();\n            if (proposal === false) {\n                return;\n            }\n            if (proposal.proposer === myAddress) {\n                return;\n            }\n            const user = await getUser(proposal.proposer);\n\n            const marriageProposal = {\n                name: user.name,\n                proposalId: proposal.id,\n                vows: proposal.proposerVows,\n                status: proposal.status,\n            }\n            setMarriageProposal(marriageProposal);\n            setHasMarriageProposal(true);\n        };\n\n        fetchEngageProposals();\n        fetchMarriageProposal();\n    },[])\n    \n\n    return (\n        <div>\n\n        <h2>Engagement Proposals</h2>\n        <div className='market'> \n                {engageProposals.map((proposal) => (\n                    <div className='newcard' onClick={() => push('/accept-engagement-proposal/' + proposal.proposalId)} >\n                        <img src={proposal.image} alt=\"Ring NFT\" />\n                        <div className=\"newcard__info\">\n                            <h2>{proposal.name}</h2>\n                            <h4>{proposal.note.length >= 100 ? proposal.note.substring(0, 100) + '...' : proposal.note}</h4>\n                        </div>\n                        <div className='newcard__infoValueParent'>\n                            <div className=\"newcard__infoValue\">\n                                {proposal.status === \"0\" && <button type=\"button\" className=\"btn btn-warning\">Waiting</button>}\n                                {proposal.status === \"1\" && <button type=\"button\" className=\"btn btn-success\">Accepted</button>}\n                                {proposal.status === \"2\" && <button type=\"button\" className=\"btn btn-danger\">Rejected</button>}\n                            </div>\n                        </div>\n                    </div>\n                ))\n                }\n        </div>\n\n        <h2>Marriage Proposals</h2>\n\n        <div className='market'> \n        {\n            hasMarriageProposal &&\n            (\n                <div className='newcard' onClick={() => push('/accept-marriage-proposal/' + marriageProposal.proposalId)}>\n                <img src='/assets/images/certificate.jpeg' alt=\"nft artwork\" />\n                <div className=\"newcard__info\">\n                    <h2>{marriageProposal.name}</h2>\n                    <h4>{marriageProposal.vows.length >= 100 ? marriageProposal.vows.substring(0, 100) + '...' : marriageProposal.vows}</h4>\n                </div>\n                <div className='newcard__infoValueParent'>\n                    <div className=\"newcard__infoValue\">\n                        {marriageProposal.status === \"0\" && <button type=\"button\" className=\"btn btn-warning\">Waiting</button>}\n                        {marriageProposal.status === \"1\" && <button type=\"button\" className=\"btn btn-success\">Accepted</button>}\n                        {marriageProposal.status === \"2\" && <button type=\"button\" className=\"btn btn-danger\">Rejected</button>}\n                    </div>\n                </div>\n                </div>\n            )\n        }\n        </div>\n        </div>\n    )\n}\n\nexport default RecievedProposals;","import { tokenURI, tokenURILoveLetter, marriageCertificateTokenURI, tokenURITree } from \"./web3\";\nimport axios from 'axios';\n\nexport const getURI = async (tokenId) => {\n    var uri = await tokenURI(tokenId);\n    uri = uri.slice(7); \n    uri = uri.substring(0, uri.length - 14);\n    uri = 'https://' + uri + '.ipfs.dweb.link/metadata.json';\n    return uri\n}  \n\nexport const uriToImageConverter = (uri) => {\n    var image = uri.slice(7); \n    image = image.substring(0, image.length - 5);\n    image = 'https://' + image + '.ipfs.dweb.link/blob';\n    return image;\n}\n\nexport const getImageFromTokenId = async (tokenId) => {\n    const uri = await getURI(tokenId);\n    const result = await axios(uri);\n    const image = uriToImageConverter(result.data.image);\n    return image;\n}\n\nexport const getMetadataFromTokenId = async (tokenId) => {\n    const uri = await getURI(tokenId);\n    const result = await axios(uri);\n    return result.data;\n}\n\nexport const getLoveLetterImageFromTokenId = async (tokenId) => {\n    var cid = await tokenURILoveLetter(tokenId);\n    const image = 'https://' + cid + '.ipfs.dweb.link';\n    return image;\n}\n\nexport const getMarriageCertURI = async (tokenId) => {\n    var uri = await marriageCertificateTokenURI(tokenId);\n    uri = uri.slice(7); \n    uri = uri.substring(0, uri.length - 14);\n    uri = 'https://' + uri + '.ipfs.dweb.link/metadata.json';\n    return uri\n}  \n\nexport const getImageFromMarriageCertTokenId = async (tokenId) => {\n    const uri = await getMarriageCertURI(tokenId);\n    const result = await axios(uri);\n    const image = uriToImageConverter(result.data.image);\n    return image;\n}\n\nexport const getTreeImageFromTokenId = async (tokenId) => {\n    const cid = await tokenURITree(tokenId);\n    const image = getImageFromCID(cid);\n    return image;\n}\n\nexport const dataURItoBlob = (dataURI) => {\n    var byteString = atob(dataURI.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    var bb = new Blob([ab], {type:'image/*'});\n    return bb;\n}\n\nexport const getGeneralContractURI = async (tokenUri) => {\n    var uri = tokenUri;\n    uri = uri.slice(7); \n    uri = uri.substring(0, uri.length - 14);\n    uri = 'https://' + uri + '.ipfs.dweb.link/metadata.json';\n    return uri\n  }  \n    \nexport const getMetadataFromGeneralContractTokenUri = async (tokenUri) => {\n    const uri = await getGeneralContractURI(tokenUri);\n    const result = await axios(uri);\n    return result.data;\n}\n  \nexport const getImageFromCID = (tokenUriCID) => {\n    return 'https://' + tokenUriCID + '.ipfs.dweb.link';\n}  ","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}