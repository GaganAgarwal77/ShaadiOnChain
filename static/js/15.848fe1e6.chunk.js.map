{"version":3,"sources":["app/AcceptMarriageProposal.js","app/certificate.js","app/services/utility.js","app/services/constants.js"],"names":["i","AcceptMarriageProposal","props","goBack","useHistory","proposalId","match","params","marriageProposalId","useState","proposerAddr","proposerUser","proposerVows","proposalStatus","proposalDetails","setProposalDetails","isDisabled","setIsDisabled","currUser","setCurrUser","yourVows","setYourVows","useEffect","getUser","getMarriageProposalById","proposal","proposer","user","prevData","id","status","proposeeVows","fetchData","respondToProposal","response","respondToMarriageProposal","window","alert","location","reload","mint","imageb64png","certificateImage","image","dataURItoBlob","client","NFTStorage","token","process","ipfs","name","description","proposee","store","metadata","storageUrl","url","mintMarriageCertificate","href","className","style","width","src","onClick","alt","height","groom_name","bride_name","groom_vows","bride_vows","is_proposal","download","fontFamily","color","fontWeight","marginRight","GENDER","gender","overflow","whiteSpace","cursor","textOverflow","e","navigator","clipboard","writeText","background","rows","value","disabled","onChange","target","placeholder","type","marginTop","canvasRef","getLines","text","limit","words","split","lines","line","w","length","push","Certificate","canvas","ctx","certificate","useRef","current","getContext","Image","onload","drawImage","font","fillStyle","fillText","groomText","groomLines","brideText","brideLines","drawCertificate","ref","link","document","createElement","toDataURL","click","getURI","tokenId","tokenURI","uri","slice","substring","uriToImageConverter","getImageFromTokenId","axios","result","data","getMetadataFromTokenId","getLoveLetterImageFromTokenId","tokenURILoveLetter","cid","getMarriageCertURI","marriageCertificateTokenURI","getImageFromMarriageCertTokenId","getTreeImageFromTokenId","tokenURITree","getImageFromCID","dataURI","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","getGeneralContractURI","tokenUri","getMetadataFromGeneralContractTokenUri","tokenUriCID","0","1","2"],"mappings":"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","file":"static/js/15.848fe1e6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../assets/Purchase.css'\nimport { useHistory } from 'react-router-dom'\nimport { InputGroup, FormControl } from 'react-bootstrap'\nimport { NFTStorage } from 'nft.storage'\n\nimport { Certificate, download, certificateImage } from './certificate.js';\nimport { getUser, getMarriageProposalById, respondToMarriageProposal, mintMarriageCertificate } from \"./services/web3\";\nimport { GENDER } from './services/constants';\nimport { dataURItoBlob } from './services/utility';\n\nfunction AcceptMarriageProposal(props) {\n    \n    const { goBack } = useHistory()\n    const proposalId = props.match.params.marriageProposalId;\n\n    const [proposalDetails, setProposalDetails] = useState({\n        proposalId: \"\",\n        proposerAddr: \"\",\n        proposerUser: \"\",\n        proposerVows: \"\",\n        proposalStatus: \"0\",\n    })\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [currUser, setCurrUser] = useState({});\n    const [yourVows, setYourVows] = useState(\"\"); \n\n    useEffect(() => {\n        const fetchData = async () => {\n            const currUser = await getUser(); // Current user\n            setCurrUser(currUser);\n\n            const proposal = await getMarriageProposalById(proposalId);\n\n            const user = await getUser(proposal.proposer);\n            setProposalDetails(prevData => ({\n                ...prevData,\n                proposalId: proposal.id,\n                proposerAddr: proposal.proposer,\n                proposerUser: user,\n                proposerVows: proposal.proposerVows,\n                proposalStatus: proposal.status,\n            }));\n\n            if(proposal.status === \"1\") {\n                setIsDisabled(true);\n                setYourVows(proposal.proposeeVows);\n            }\n            else if(proposal.status === \"2\") {\n                setIsDisabled(true);\n            }\n\n          };\n\n        fetchData();\n    },[proposalId]);\n\n    const respondToProposal = async (response) => {\n        const status = await respondToMarriageProposal(proposalId, response, yourVows);\n        if(status) {\n            window.alert(\"Your response is saved on blockchain successfully\");\n            window.location.reload();\n        }\n    }\n\n    const mint = async () => {\n        const imageb64png = certificateImage();\n        const image = dataURItoBlob(imageb64png)\n\n        const client = new NFTStorage({ token: process.env.REACT_APP_NFT_STORAGE })\n        const ipfs = { \n            name: \"Marriage certificate\",\n            description: \"This is a marriage certificate\",\n            image: image,\n            proposer: proposalDetails.proposerUser.name , \n            proposee: currUser.name,  \n        };\n        const metadata = await client.store(ipfs);\n        window.alert(\"Successfully stored on IPFS\");\n\n        var storageUrl = metadata.url;\n        const status = await mintMarriageCertificate(storageUrl, proposalDetails.proposerAddr);\n        if(status) {\n            window.alert('Minted marriage certificate successfully for you and your partner!');\n            window.location.href =\"/#/dashboard\"\n        }\n    }\n\n    return(\n            <div className='purchase'>\n                <div className=\"goback\">    \n                   <img style={{width:\"48px\"}} src=\"/assets/images/wedding-img/icon/left-arrow3.png\" onClick={goBack} alt=\"Go back\" className='gobackButton'/>   \n                </div> \n                <br/><br/><br/>\n                <div className=\"purchase__artwork\">\n                    <Certificate style={{width:\"35vw\"}} width='700' height='500' \n                    groom_name={proposalDetails.proposerUser.name} bride_name={currUser.name}\n                    groom_vows={proposalDetails.proposerVows} bride_vows={yourVows} is_proposal='false'/>\n                    <br/>\n                    <button className=\"btn btn-primary\" onClick={() => {download();} }><i className=\"mdi mdi-file-check btn-icon-prepend\"></i>Download</button>\n                </div>\n\n                <div className=\"purchase__details\">\n                <h3 style={{fontFamily:\"Poppins, serif\", color:\"#f2c96a\"}}>Proposer's Details:</h3>\n                    <div className='d-flex' style={{fontWeight:\"300\"}}>\n                    <h4 style={{marginRight:\"1rem\",fontWeight:\"300\"}}>Name: <span style={{color:\"#f2c96a\"}}>{proposalDetails.proposerUser.name}</span></h4> \n                    <h4 style={{fontWeight:\"300\"}}>Gender: <span style={{color:\"#f2c96a\"}}>{GENDER[proposalDetails.proposerUser.gender]}</span></h4> \n\n                    </div>\n                    <h4 style={{width:\"250px\", overflow:\"hidden\", whiteSpace:\"nowrap\", cursor:\"pointer\", textOverflow:\"ellipsis\", fontWeight:\"300\"}} \n                    onClick={(e) => {navigator.clipboard.writeText(proposalDetails.proposerAddr); alert(\"Copied wallet address to clipboard\")}}>\n                        Wallet Address: <span style={{color:\"#f2c96a\"}}>{proposalDetails.proposerAddr}</span></h4>\n                    <label>Recieved Vows:</label>\n                    <textarea style={{color:\"#f2c96a\",background:\"#2A3038\"}} className=\"form-control\" id=\"exampleTextarea1\" rows=\"4\" \n                        value={proposalDetails.proposerVows} disabled />\n                    <br/>  \n\n                    <label className=\"mt-4\">Your Vows:</label>\n                    <textarea style={{color:\"#f2c96a\"}} value={yourVows} onChange={(e) => {setYourVows(e.target.value)}}\n                        className=\"form-control\" id=\"note\" rows=\"4\" placeholder=\"Write your vows\"/>\n\n                        {\n                            isDisabled ? \n                            <div>\n                                {proposalDetails.proposalStatus === \"1\" && <button type=\"button\" className=\"btn btn-success\">Accepted</button>}\n                                {proposalDetails.proposalStatus === \"2\" && <button type=\"button\" className=\"btn btn-danger\">Rejected</button>}\n                                <div  style={{marginTop:\"10px\"}} className=\"purchase__detailsBuy\" >\n                                <button onClick={mint}>Mint Marriage Certificate</button>\n                                </div>\n                            </div>\n                            :\n                            <div style={{marginTop:\"10px\"}} className=\"purchase__detailsBuy\">\n                                <button style={{background: \"radial-gradient( circle 542px at 16.6% 38.6%,  rgba(66,164,14,1) 0%, rgba(86,230,99,1) 100.2% )\"}} onClick={() => {respondToProposal(true)}}>Accept Proposal</button>\n                                <button onClick={() => {respondToProposal(false)}} \n                                style={{background: \"linear-gradient(to right, #ee0979, #ff6a00)\"}} >Reject Proposal</button>\n                            </div>\n                        }\n                    \n                </div>\n            </div> \n    )\n}\n\nexport default AcceptMarriageProposal;\n","import React, { useRef, useEffect } from 'react';\nimport '../assets/styles/_fonts.scss'\nvar canvasRef;\n\nconst getLines = (text, limit=20) => {\n\tvar words = text.split(' ');\n\tvar lines=[];\n\tvar line = \"\";\n\tfor(var w=0;w<words.length;w++){\n\t\tif(limit <= words[w].length){\n\t\t\tlines.push(line);\n\t\t\tlimit = 20;\n\t\t\tline = \"\";\n\t\t}\n\t\tline += `${words[w]} `;\n\t\tlimit -= words[w].length;\n\t}\n\tlines.push(line);\n\treturn lines;\n}\n\nconst Certificate = (props) => {\n    canvasRef = useRef(null);\n    let canvas, ctx, certificate;\n    const drawCertificate = () => {\n        ctx.drawImage(certificate, 0, 0, ctx.canvas.width, ctx.canvas.height)\n        ctx.font = '27px Alex Brush, cursive'\n        ctx.fillStyle = '#000'\n        ctx.fillText(`${props.groom_name} & ${props.bride_name}`, 200, 230);\n        \n        ctx.font = 'italic 20px Poppins, serif'\n        \n        var groomText = props.groom_vows;\n        var groomLines = getLines(groomText, 20);\n        for(let i=0;i<groomLines.length;i++)\n            ctx.fillText(groomLines[i], 80, 320+(i*20));\n        \n        if(props.is_proposal === 'false'){\n            var brideText = props.bride_vows;\n            var brideLines = getLines(brideText, 20);\n            for(let i=0;i<brideLines.length;i++)\n                ctx.fillText(brideLines[i], 400, 320+(i*20));\n        }\n    };\n    \n    useEffect(() => {\n        canvas = canvasRef.current;\n        ctx = canvas.getContext('2d');\n        certificate = new Image();\n\n        certificate.src = '/assets/images/certificate.jpeg';\n        certificate.onload = () => {\n            drawCertificate();\n        };\n    }, [props.groom_vows, props.bride_vows]);\n\n    return <canvas ref={canvasRef} {...props}/>;\n};\n\nconst download = () => {\n    var link = document.createElement('a');\n    link.download = 'ShaadiOnChain-Certificate.png';\n    link.href = canvasRef.current.toDataURL();\n    link.click();\n};\n\nconst certificateImage = () => {\n    return canvasRef.current.toDataURL();\n}\n\nexport {\n    Certificate,\n    download, \n    certificateImage\n}","import { tokenURI, tokenURILoveLetter, marriageCertificateTokenURI, tokenURITree } from \"./web3\";\nimport axios from 'axios';\n\nexport const getURI = async (tokenId) => {\n    var uri = await tokenURI(tokenId);\n    uri = uri.slice(7); \n    uri = uri.substring(0, uri.length - 14);\n    uri = 'https://' + uri + '.ipfs.dweb.link/metadata.json';\n    return uri\n}  \n\nexport const uriToImageConverter = (uri) => {\n    var image = uri.slice(7); \n    image = image.substring(0, image.length - 5);\n    image = 'https://' + image + '.ipfs.dweb.link/blob';\n    return image;\n}\n\nexport const getImageFromTokenId = async (tokenId) => {\n    const uri = await getURI(tokenId);\n    const result = await axios(uri);\n    const image = uriToImageConverter(result.data.image);\n    return image;\n}\n\nexport const getMetadataFromTokenId = async (tokenId) => {\n    const uri = await getURI(tokenId);\n    const result = await axios(uri);\n    return result.data;\n}\n\nexport const getLoveLetterImageFromTokenId = async (tokenId) => {\n    var cid = await tokenURILoveLetter(tokenId);\n    const image = 'https://' + cid + '.ipfs.dweb.link';\n    return image;\n}\n\nexport const getMarriageCertURI = async (tokenId) => {\n    var uri = await marriageCertificateTokenURI(tokenId);\n    uri = uri.slice(7); \n    uri = uri.substring(0, uri.length - 14);\n    uri = 'https://' + uri + '.ipfs.dweb.link/metadata.json';\n    return uri\n}  \n\nexport const getImageFromMarriageCertTokenId = async (tokenId) => {\n    const uri = await getMarriageCertURI(tokenId);\n    const result = await axios(uri);\n    const image = uriToImageConverter(result.data.image);\n    return image;\n}\n\nexport const getTreeImageFromTokenId = async (tokenId) => {\n    const cid = await tokenURITree(tokenId);\n    const image = getImageFromCID(cid);\n    return image;\n}\n\nexport const dataURItoBlob = (dataURI) => {\n    var byteString = atob(dataURI.split(',')[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    var bb = new Blob([ab], {type:'image/*'});\n    return bb;\n}\n\nexport const getGeneralContractURI = async (tokenUri) => {\n    var uri = tokenUri;\n    uri = uri.slice(7); \n    uri = uri.substring(0, uri.length - 14);\n    uri = 'https://' + uri + '.ipfs.dweb.link/metadata.json';\n    return uri\n  }  \n    \nexport const getMetadataFromGeneralContractTokenUri = async (tokenUri) => {\n    const uri = await getGeneralContractURI(tokenUri);\n    const result = await axios(uri);\n    return result.data;\n}\n  \nexport const getImageFromCID = (tokenUriCID) => {\n    return 'https://' + tokenUriCID + '.ipfs.dweb.link';\n}  ","export const GENDER = {\n    0: \"Male\",\n    1: \"Female\",\n    2: \"Others\"\n}\n\nexport const PROPOSAL_STATUS = {\n    0: \"Pending\",\n    1: \"Accepted\",\n    2: \"Rejected\"\n}"],"sourceRoot":""}